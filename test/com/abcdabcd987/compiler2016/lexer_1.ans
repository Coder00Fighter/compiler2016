<KEYWORD, int>
<IDENTIFIER, nfactor>
<SYMBOL, (>
<KEYWORD, int>
<IDENTIFIER, n>
<SYMBOL, )>
<SYMBOL, {>
<KEYWORD, if>
<SYMBOL, (>
<IDENTIFIER, n>
<SYMBOL, ==>
<INTEGER, 0>
<SYMBOL, )>
<KEYWORD, return>
<INTEGER, 1>
<SYMBOL, ;>
<KEYWORD, else>
<KEYWORD, return>
<IDENTIFIER, n>
<SYMBOL, *>
<IDENTIFIER, nfactor>
<SYMBOL, (>
<IDENTIFIER, n>
<SYMBOL, ->
<INTEGER, 1>
<SYMBOL, )>
<SYMBOL, ;>
<SYMBOL, }>
<KEYWORD, int>
<IDENTIFIER, main>
<SYMBOL, (>
<SYMBOL, )>
<SYMBOL, {>
<KEYWORD, int>
<IDENTIFIER, a>
<SYMBOL, =>
<IDENTIFIER, nfactor>
<SYMBOL, (>
<INTEGER, 6>
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, printf>
<SYMBOL, (>
<STRING, %d
>
<SYMBOL, ,>
<IDENTIFIER, a>
<SYMBOL, )>
<SYMBOL, ;>
<IDENTIFIER, double>
<IDENTIFIER, b>
<SYMBOL, =>
<INTEGER, 83>
<SYMBOL, +>
<INTEGER, 382>
<SYMBOL, ;>
<KEYWORD, char>
<IDENTIFIER, c>
<SYMBOL, =>
<CHAR, c>
<SYMBOL, ;>
<IDENTIFIER, printf>
<SYMBOL, (>
<STRING, %f%c
>
<SYMBOL, ,>
<IDENTIFIER, b>
<SYMBOL, ,>
<IDENTIFIER, c>
<SYMBOL, )>
<SYMBOL, ;>
<KEYWORD, return>
<IDENTIFIER, a>
<SYMBOL, ;>
<SYMBOL, }>
<EOF>
